buildscript {
    ext {
        springBootVersion = '3.3.5'
    }
    repositories { mavenCentral() }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.6'
}

application {
    mainClass = 'org.avni.ruleServer.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.graalvm.sdk:graal-sdk:23.0.0' // Adjust version as needed
    implementation 'org.graalvm.js:js:23.0.0' // Adjust version as needed
    implementation project(':avni-server-data')
    implementation group: 'org.apache.tomcat', name: 'tomcat-jdbc'
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-cache:${springBootVersion}")
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}"
    implementation("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    testImplementation "com.github.tomakehurst:wiremock-jre8-standalone:2.34.0"
    implementation "org.postgresql:postgresql"
//    implementation("org.springframework.boot:spring-boot-starter-batch:${springBootVersion}")
//    testImplementation 'org.springframework.batch:spring-batch-test:5.1.2'
    implementation "joda-time:joda-time:2.10.10"
    implementation("org.hibernate:hibernate-java8:5.6.15.Final") {
        exclude(group: 'org.hibernate', module: 'hibernate-core')
    }
    runtimeOnly("javax.transaction:jta:1.1")
    implementation "com.zaxxer:HikariCP"
    implementation "org.apache.poi:poi:3.16-beta2"
    implementation "org.apache.poi:poi-ooxml:3.16-beta2"
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.3'
    implementation 'commons-validator:commons-validator:1.4.1'
    implementation 'org.passay:passay:1.6.3'
    implementation 'org.keycloak:keycloak-spring-boot-starter:24.0.4'
    implementation 'org.keycloak:keycloak-admin-client:24.0.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.4'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.15.4'

    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation 'javax.cache:cache-api:1.1.1'
    implementation("org.hibernate.orm:hibernate-jcache:6.5.2.Final") {
        exclude(group: "org.hibernate.orm", module: "hibernate-core")
    }
    runtimeOnly('org.hibernate:hibernate-ehcache:5.6.15.Final') {
        exclude(group: 'org.hibernate', module: 'hibernate-core')
    }

    implementation('org.ehcache:ehcache:3.10.8:jakarta')

    runtimeOnly("javax.xml.bind:jaxb-api:2.3.1")
    runtimeOnly("org.springframework.boot:spring-boot-properties-migrator")
    implementation 'org.apache.tika:tika-core:2.7.0'
    implementation 'org.owasp.encoder:encoder:1.2.3'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.32'
    testImplementation 'org.slf4j:slf4j-reload4j:2.0.6'
    implementation 'com.google.guava:guava:33.2.1-jre'
    implementation 'org.codehaus.jettison:jettison:1.5.4'
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task copyJsFiles(type: Copy) {
    from 'src/main/js'
    into "$buildDir/resources/js"
}

tasks.processResources.dependsOn(copyJsFiles)

jar {
    manifest {
        attributes(
                'Main-Class': 'org.avni.ruleServer.Main'
        )
    }
}
