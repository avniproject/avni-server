# Build
spring.profiles.active=${OPENCHS_MODE:dev}

# Database
avni.database=${OPENCHS_DATABASE:openchs}
avni.database.port=${OPENCHS_DATABASE_PORT:5432}
avni.database.server=${OPENCHS_DATABASE_HOST:localhost}
avni.database.server.supportsSSL=${AVNI_DATABASE_SUPPORTS_SSL:true}
spring.datasource.url=${OPENCHS_DATABASE_URL:jdbc:postgresql://${avni.database.server}:${avni.database.port}/${avni.database}?currentSchema=public}
spring.datasource.username=${OPENCHS_DATABASE_USER:openchs}
spring.datasource.password=${OPENCHS_DATABASE_PASSWORD:password}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.tomcat.testWhileIdle=true
spring.datasource.tomcat.validationQuery=SELECT 1
spring.datasource.tomcat.jdbc-interceptors=org.avni.server.framework.tomcat.SetOrganisationJdbcInterceptor

#Bugsnag
avni.bugsnag.apiKey=${OPENCHS_SERVER_BUGSNAG_API_KEY:dummy}
avni.bugsnag.releaseStage=${OPENCHS_BUGSNAG_RELEASE_STAGE:development}

# Flyway
spring.flyway.enabled=${FLYWAY_ENABLED:true}
spring.flyway.schemas=public
spring.flyway.baseline-on-migrate=false
spring.flyway.out-of-order=true
spring.flyway.ignore-migration-patterns=repeatable:missing
spring.flyway.table=schema_version
spring.flyway.validate-on-migrate=${AVNI_FLYWAY_VALIDATE_ON_MIGRATE:true}

# JPA, Hibernate and Spring Data
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.jadira.usertype.databaseZone=jvm
#spring.jpa.properties.jadira.usertype.javaZone=jvm
#spring.jpa.properties.jadira.usertype.autoRegisterUserTypes=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.session_factory.interceptor=org.avni.server.framework.hibernate.UpdateOrganisationHibernateInterceptor
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
avni.custom.query.timeout=${AVNI_CUSTOM_QUERY_TIMEOUT:3}
avni.custom.query.max.rows=${AVNI_CUSTOM_QUERY_MAX_ROWS:2000}
avni.longitudinal.export.v2.limit=${AVNI_LONGITUDINAL_EXPORT_V2_LIMIT:10000}
avni.legacy.longitudinal.export.limit=${AVNI_LEGACY_LONGITUDINAL_EXPORT_LIMIT:10000}

spring.main.allow-bean-definition-overriding=true

# Second level and Query cache. Also check ehcache.xml file.
#https://docs.jboss.org/hibernate/orm/6.1/userguide/html_single/Hibernate_User_Guide.html#caching-provider-jcache
#spring.cache.jcache.config=${AVNI_EHCACHE_FILE:classpath:ehcache.xml}
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=jcache
spring.jpa.properties.hibernate.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.hibernate.javax.cache.uri=${AVNI_EHCACHE_FILE:classpath://ehcache.xml}

# Hibernate Search
spring.jpa.properties.hibernate.search.default.directory_provider=local-heap

# Security
spring.security.user.name=admin
spring.security.user.password=secret
management.security.roles=SUPERUSER
avni.idp.type=${AVNI_IDP_TYPE:cognito}
avni.webapp.timeout.in.minutes=${AVNI_WEBAPP_TIMEOUT:21600}
avni.blacklisted.urls-file=${AVNI_BLACKLISTED_URLS_FILE:}
avni.csrf.enabled=${AVNI_CSRF_ENABLED:false}
avni.web.validHosts=${AVNI_WEB_VALIDHOSTS:}
avni.web.payload.encoding=${AVNI_WEB_PAYLOAD_ENCODING:false}

# Cognito
cognito.clientid=${OPENCHS_CLIENT_ID:dummy}
cognito.poolid=${OPENCHS_USER_POOL:dummy}
cognito.region=${OPENCHS_AWS_REGION:ap-south-1}

# REST
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.mapper.accept-case-insensitive-enums=true

# Application
debug=false
avni.defaultUserName=${OPENCHS_USER_NAME:admin}
avni.environment=${AVNI_ENVIRONMENT:development}
spring.servlet.multipart.max-file-size=10028KB
spring.servlet.multipart.max-request-size=10028KB

# Network
server.tomcat.protocol-header=x-forwarded-proto
spring.security.require-ssl=true
server.port=${OPENCHS_SERVER_PORT:8021}
server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/hal+json,application/javascript

# S3 Media
aws.accessKeyId=${OPENCHS_IAM_USER_ACCESS_KEY:dummy}
aws.secretAccessKey=${OPENCHS_IAM_USER_SECRET_ACCESS_KEY:dummy}
avni.bucketName=${OPENCHS_BUCKET_NAME:dummy}
avni.connectToS3InDev=${OPENCHS_S3_IN_DEV:false}

#Minio
minio.s3.enable=${OPENCHS_MINIO_ENABLED:false}
minio.url=${OPENCHS_MINIO_URL:http://localhost:9000}
minio.accessKey=${OPENCHS_MINIO_ACCESS_KEY:dummy}
minio.secretAccessKey=${OPENCHS_MINIO_SECRET_ACCESS_KEY:dummy}

static.path=${OPENCHS_STATIC_PATH:/opt/openchs/static/}
csp.enabled=${OPENCHS_CSP_ENABLED:false}
csp.allowed.hosts=${OPENCHS_CSP_ALLOWED_HOSTS:*.amazonaws.com keycloak-staging.avniproject.org}
analytics.path=${OPENCHS_ANALYTICS_PATH:/opt/openchs/analytics/}
spring.jackson.serialization.write-dates-as-timestamps=false

# Batch Jobs
spring.batch.jdbc.initialize-schema=always
spring.batch.job.enabled=false
avni.messagingScheduleMillis=${OPENCHS_MESSAGE_SEND_JOB_SCHEDULE:300000}
avni.messaging.scheduledSinceDays=${AVNI_SEND_MESSAGES_SCHEDULED_SINCE_DAYS:4}
avni.job.storagemanagement.cron=${AVNI_JOB_STORAGE_MANAGEMENT_CRON:0 0 2 * * *}

# Node Rules Server
node.server.url=http://localhost:3000

# Msg91
msg91.server.url=https://api.msg91.com
avni.connectToMsg91InDev=${OPENCHS_MSG91_IN_DEV:false}
avni.msg91.authKey.base64EncodedEncryptionKey=${OPENCHS_MSG91_AUTHKEY_KEY:xqtzQhHsDFVQt9TK50UHcKda7/QM31bEE2lvTrcFoTU=}

#Keycloak
keycloak.enabled=true
keycloak.auth-server-url=${OPENCHS_KEYCLOAK_SERVER:http://localhost:8080}
keycloak.public-client=false
keycloak.realm=On-premise
keycloak.resource=admin-api
keycloak.ssl-required=external
keycloak.credentials.secret=${OPENCHS_KEYCLOAK_CLIENT_SECRET:dummy}
keycloak.use-resource-role-mappings=true
avni.keycloak.avni.publicKeyId=dummy
avni.keycloak.client=avni-client
avni.keycloak.verify.token.audience=avni-server
avni.keycloak.user.email.verified=email_verified
avni.keycloak.user.preferred.username=preferred_username
avni.keycloak.user.uuid=custom:userUUID
avni.keycloak.openid.connect.certs=%s/protocol/openid-connect/certs
avni.keycloak.realms=%s/realms/%s
avni.keycloak.realm=On-premise

# Tomcat
server.tomcat.basedir=${OPENCHS_ACCESS_LOG_DIR:.}
server.tomcat.accesslog.directory=log
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.max-days=90

#Exotel
avni.connectToExotelInDev=${OPENCHS_EXOTEL_IN_DEV:false}

#Cache
avni.cache.max.entries=${OPENCHS_CACHE_MAX_ENTRIES:100}
avni.cache.ttl.seconds=${OPENCHS_CACHE_TTL_SECONDS:600}
avni.cache.max.weight=${OPENCHS_CACHE_MAX_WEIGHT:1000}

avni.enhancedValidation.enabled=${AVNI_ENHANCED_VALIDATION:true}
avni.exception.in.response=${AVNI_SEND_EXCEPTION_IN_RESPONSE:true}

logging.level.org.hibernate.SQL=OFF
logging.level.org.apache.hc.client5.http.protocol.ResponseProcessCookies=ERROR

#reporting
avni.reportingSystems[0].name=${AVNI_REPORTING_SYSTEM_0_NAME:}
avni.reportingSystems[0].url=${AVNI_REPORTING_SYSTEM_0_URL:}
avni.reportingSystems[1].name=${AVNI_REPORTING_SYSTEM_1_NAME:}
avni.reportingSystems[1].url=${AVNI_REPORTING_SYSTEM_1_URL:}
avni.reportingSystems[2].name=${AVNI_REPORTING_SYSTEM_2_NAME:}
avni.reportingSystems[2].url=${AVNI_REPORTING_SYSTEM_2_URL:}

#metabase
avni.reporting.metabase.self.service.enabled=${AVNI_REPORTING_METABASE_SELF_SERVICE_ENABLED:false}
metabase.api.url=${METABASE_API_URL:http://localhost:3000/api}
metabase.api.key=${METABASE_API_KEY:mb_uhFRMqCSre4v/hTZTsQcMnh8k2GCZFX2tGmSBdoxNow=}
metabase.db.url=${METABASE_DB_URL:jdbc:postgresql://localhost:5432/reportingdb}
metabase.db.user=${METABASE_DB_USER:reporting_user}
metabase.db.password=${METABASE_DB_PASSWORD:password}
avni.reporting.metabase.db.sync.max.timeout.in.minutes=${AVNI_REPORTING_METABASE_DB_SYNC_MAX_TIMEOUT_IN_MINUTES:20}

# end of life
avni.endpoints.endOfLife.1=${AVNI_ENDPOINT_END_OF_LIFE_1:2024-09-05}

spring.mvc.pathmatch.matching-strategy=ant_path_matcher
server.servlet.register-default-servlet=true

#default org configuration
avni.default.org.user.db.password=${AVNI_DEFAULT_ORG_USER_DB_PASSWORD:password}

# Avni Sync Configuration
# Server configuration for sync
avni.sync.server.url=${AVNI_SYNC_SERVER_URL:https://your-avni-server.com}
avni.sync.server.apiKey=${AVNI_SYNC_API_KEY:}

# Sync database configuration (H2 for local sync storage)
avni.sync.database.url=${AVNI_SYNC_DATABASE_URL:jdbc:h2:./data/avni-sync-db}
avni.sync.database.username=${AVNI_SYNC_DATABASE_USERNAME:sa}
avni.sync.database.password=${AVNI_SYNC_DATABASE_PASSWORD:}

# Media storage configuration
avni.sync.media.baseDirectory=${AVNI_SYNC_MEDIA_DIRECTORY:./media}

# Device configuration
avni.sync.device.id=${AVNI_SYNC_DEVICE_ID:}

# HTTP client configuration
avni.sync.http.loggingEnabled=${AVNI_SYNC_HTTP_LOGGING:false}
avni.sync.http.connectionTimeoutSeconds=${AVNI_SYNC_HTTP_CONNECTION_TIMEOUT:30}
avni.sync.http.readTimeoutSeconds=${AVNI_SYNC_HTTP_READ_TIMEOUT:60}
avni.sync.http.writeTimeoutSeconds=${AVNI_SYNC_HTTP_WRITE_TIMEOUT:120}

# Sync behavior configuration
avni.sync.autoSyncEnabled=${AVNI_SYNC_AUTO_ENABLED:true}
avni.sync.backgroundIntervalMinutes=${AVNI_SYNC_BACKGROUND_INTERVAL:30}
avni.sync.pageSize=${AVNI_SYNC_PAGE_SIZE:100}
avni.sync.maxRetryAttempts=${AVNI_SYNC_MAX_RETRY:3}
avni.sync.retryDelaySeconds=${AVNI_SYNC_RETRY_DELAY:5}
