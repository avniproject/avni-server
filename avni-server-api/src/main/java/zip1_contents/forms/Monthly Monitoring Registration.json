{
  "name" : "Monthly Monitoring Registration",
  "uuid" : "7266ef6e-f240-4597-8ba7-4f49dffd6765",
  "formType" : "IndividualProfile",
  "formElementGroups" : [ {
    "uuid" : "485a0caa-abf2-47c5-804c-01db7dce9333",
    "name" : "test",
    "displayOrder" : 1.0,
    "display" : "test",
    "formElements" : [ ],
    "timed" : false
  } ],
  "decisionRule" : "",
  "visitScheduleRule" : "//SAMPLE RULE EXAMPLE\n\"use strict\";\n({ params, imports }) => {\n  const individual = params.entity;\n  const scheduleBuilder = new imports.rulesConfig.VisitScheduleBuilder({ individual });\n  const moment = imports.moment;\n\n  if (moment(individual.registrationDate).date() <= 25) {\n    console.log(\"Entered in at least\")\n    const earliestDate = imports.moment(individual.registrationDate).date(25).toDate();\n    const maxDate = imports.moment(earliestDate).add(8, 'days').toDate();\n    scheduleBuilder.add({\n      name: \"Monthly Animal Health Worker Reporting form\",\n      encounterType: \"Monthly Animal Health Worker Reporting form\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n    scheduleBuilder.add({\n      name: \"Senior Health Worker Monthly Reporting\",\n      encounterType: \"Senior Health Worker Monthly Reporting\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n    scheduleBuilder.add({\n      name: \"Monthly Village Health worker report\",\n      encounterType: \"Monthly Village Health worker report\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n    scheduleBuilder.add({\n      name: \"Monthly Cluster monitoring\",\n      encounterType: \"Monthly Cluster monitoring\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n\n    const earliestDateForWeeklyVisits = imports.moment(individual.registrationDate).day(6).toDate();\n    const maxDateForWeeklyVisits = imports.moment(earliestDateForWeeklyVisits).add(1, 'days').toDate();\n\n    scheduleBuilder.add({\n      name: \"Senior Health Worker Weekly Reporting\",\n      encounterType: \"Senior Health Worker Weekly Reporting\",\n      earliestDate: earliestDateForWeeklyVisits,\n      maxDate: maxDateForWeeklyVisits\n    });\n    scheduleBuilder.add({\n      name: \"Weekly Village Health Worker Reporting\",\n      encounterType: \"Weekly Village Health Worker Reporting\",\n      earliestDate: earliestDateForWeeklyVisits,\n      maxDate: maxDateForWeeklyVisits\n    });\n  } else if (moment(individual.registrationDate).date() > 25) {\n\n    const earliestDate = moment(individual.registrationDate).add(15, 'days').date(25).toDate();\n    const maxDate = moment(earliestDate).add(8, 'days').toDate();\n\n    scheduleBuilder.add({\n      name: \"Monthly Animal Health Worker Reporting form\",\n      encounterType: \"Monthly Animal Health Worker Reporting form\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n    scheduleBuilder.add({\n      name: \"Senior Health Worker Monthly Reporting\",\n      encounterType: \"Senior Health Worker Monthly Reporting\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n    scheduleBuilder.add({\n      name: \"Monthly Village Health worker report\",\n      encounterType: \"Monthly Village Health worker report\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n    scheduleBuilder.add({\n      name: \"Monthly Cluster monitoring\",\n      encounterType: \"Monthly Cluster monitoring\",\n      earliestDate: earliestDate,\n      maxDate: maxDate\n    });\n\n    const earliestDateForWeeklyVisits = imports.moment(individual.registrationDate).day(6).toDate();\n    const maxDateForWeeklyVisits = imports.moment(earliestDateForWeeklyVisits).add(1, 'days').toDate();\n\n    scheduleBuilder.add({\n      name: \"Senior Health Worker Weekly Reporting\",\n      encounterType: \"Senior Health Worker Weekly Reporting\",\n      earliestDate: earliestDateForWeeklyVisits,\n      maxDate: maxDateForWeeklyVisits\n    });\n    scheduleBuilder.add({\n      name: \"Weekly Village Health Worker Reporting\",\n      encounterType: \"Weekly Village Health Worker Reporting\",\n      earliestDate: earliestDateForWeeklyVisits,\n      maxDate: maxDateForWeeklyVisits\n    });\n  }\n\n  return scheduleBuilder.getAll();\n};",
  "validationRule" : "",
  "checklistsRule" : "",
  "decisionConcepts" : [ ]
}