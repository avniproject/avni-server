{
  "name" : "USG Report",
  "uuid" : "8966cd7e-03e1-481e-913d-79e2233cb588",
  "formType" : "ProgramEncounter",
  "formElementGroups" : [ {
    "uuid" : "270d223b-3593-46d6-a4fd-50f8817c0ab7",
    "name" : "Details",
    "displayOrder" : 1.0,
    "display" : "Details",
    "formElements" : [ {
      "name" : "Foetus is ok",
      "uuid" : "c48c0c43-16c5-4ce4-b14a-b6d6f2e76074",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Foetus is ok",
        "uuid" : "6618dfd6-5df2-4c85-b916-0679bcb9be03",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "Yes",
          "uuid" : "57e20de7-10de-4391-b7ce-87b2f40d19a2",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        }, {
          "name" : "No",
          "uuid" : "f88da2e8-6ab4-44b5-b762-233485cd25f9",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "abnormal" : true,
          "active" : true
        } ],
        "active" : true,
        "keyValues" : [ ]
      },
      "displayOrder" : 1.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Presentation of baby",
      "uuid" : "2eac6d65-16b9-442e-9614-c49583b97feb",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Presentation of baby",
        "uuid" : "e7b5d460-47dd-490b-af0a-a73a19a93a9d",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "Transverse",
          "uuid" : "901014fd-60bb-4843-a319-c3d58e2bdb19",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 2.0,
          "abnormal" : true,
          "active" : true,
          "keyValues" : [ ]
        }, {
          "name" : "Breach",
          "uuid" : "37006041-5287-4913-b409-0ff8d0065557",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "abnormal" : true,
          "active" : true,
          "keyValues" : [ ]
        }, {
          "name" : "Vertex",
          "uuid" : "d49d3369-74aa-4d45-a1f0-6578453fddb6",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true,
          "keyValues" : [ ]
        } ],
        "active" : true,
        "keyValues" : [ ]
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Twin baby",
      "uuid" : "62c1940c-af5d-43bc-ab0c-8be15c2d623a",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Twin baby",
        "uuid" : "9f55f157-c835-4068-a948-c849073d1d86",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "No",
          "uuid" : "f88da2e8-6ab4-44b5-b762-233485cd25f9",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Yes",
          "uuid" : "57e20de7-10de-4391-b7ce-87b2f40d19a2",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "abnormal" : true,
          "active" : true
        } ],
        "active" : true,
        "keyValues" : [ ]
      },
      "displayOrder" : 3.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Follow USG required",
      "uuid" : "b33c383e-d323-4735-9b50-39abc497ecb7",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Follow USG required",
        "uuid" : "96499ee7-ad90-4831-a0bd-1fd765f6f6c0",
        "dataType" : "Coded",
        "answers" : [ {
          "name" : "No",
          "uuid" : "f88da2e8-6ab4-44b5-b762-233485cd25f9",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 1.0,
          "active" : true
        }, {
          "name" : "Yes",
          "uuid" : "57e20de7-10de-4391-b7ce-87b2f40d19a2",
          "dataType" : "NA",
          "answers" : [ ],
          "order" : 0.0,
          "active" : true
        } ],
        "active" : true,
        "keyValues" : [ ]
      },
      "displayOrder" : 4.0,
      "type" : "SingleSelect",
      "mandatory" : true
    }, {
      "name" : "Date of next USG",
      "uuid" : "9623b490-6eff-49ad-bdca-f3122cde292c",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Date of next USG",
        "uuid" : "71efca55-ad55-4814-a16f-44d714c6ecf5",
        "dataType" : "Date",
        "answers" : [ ],
        "active" : true,
        "keyValues" : [ ]
      },
      "displayOrder" : 5.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEncounter = params.entity;\n  const formElement = params.formElement;\n  const statusBuilder = new \n  imports.rulesConfig.FormElementStatusBuilder({programEncounter, formElement});\n  statusBuilder.show().when.valueInEncounter('Follow USG required').containsAnswerConceptName('Yes');\n  \nreturn statusBuilder.build();\n};",
      "mandatory" : true
    } ],
    "timed" : false
  } ],
  "decisionRule" : "\"use strict\";\n({params, imports}) => {\n    const programEncounter = params.entity;\n    const decisions = params.decisions;\n    const complicationsBuilder = new imports.rulesConfig.complicationsBuilder({\n        programEncounter: programEncounter,\n        complicationsConcept: \"High Risk Conditions\"\n    });\n    \n  complicationsBuilder\n        .addComplication(\"Twins\")\n        .when.valueInEncounter(\"Twin baby\")\n        .containsAnswerConceptName(\"Yes\");\n        //Foetal Position\n  complicationsBuilder\n        .addComplication(\"Foetal Position is not normal\")\n        .when.valueInEncounter(\"Presentation of baby\")\n        .containsAnyAnswerConceptName(\"Transverse\",\"Breach\");\n     complicationsBuilder\n        .addComplication(\"Foetus is not ok\")\n        .when.valueInEncounter(\"Foetus is ok\")\n        .containsAnyAnswerConceptName(\"No\");\n             \n    decisions.encounterDecisions.push(complicationsBuilder.getComplications());\n    return decisions;\n};",
  "visitScheduleRule" : "\"use strict\";\n({ params, imports }) => {\n  const programEncounter = params.entity;\n  const scheduleBuilder = new imports.rulesConfig.VisitScheduleBuilder({\n    programEncounter\n  });\nconst nextUSGDate = programEncounter.getObservationValue('Date of next USG');\n\nif(nextUSGDate)\n  scheduleBuilder\n    .add({\n      name: \"USG Report\",\n      encounterType: \"USG Report\",\n      earliestDate: imports.moment(nextUSGDate).toDate(),\n      maxDate: imports.moment(nextUSGDate).add(4, 'days').toDate()\n    });\n  return scheduleBuilder.getAll();\n};",
  "validationRule" : "",
  "checklistsRule" : "",
  "decisionConcepts" : [ ]
}