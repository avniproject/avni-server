{
  "name" : "Stroke Enrolment",
  "uuid" : "1fc5ac2f-d112-4512-a3a4-6922ef580ab9",
  "formType" : "ProgramEnrolment",
  "formElementGroups" : [ {
    "uuid" : "352d8dba-39e0-481e-9c5c-3b15bc7caa66",
    "name" : "Details",
    "displayOrder" : 1.0,
    "display" : "Details",
    "formElements" : [ {
      "name" : "Date of diagnosis",
      "uuid" : "142a1783-b7ed-4021-83ac-8f63d0afdc84",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Date of diagnosis",
        "uuid" : "cb549d98-5890-4182-a930-70939b0c0e33",
        "dataType" : "Date",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 1.0,
      "type" : "SingleSelect",
      "rule" : "'use strict';\n({params, imports}) => {\n  const programEnrolment = params.entity;\n  const formElement = params.formElement;\n  const statusBuilder = new imports.rulesConfig.FormElementStatusBuilder({programEnrolment, formElement});\n  \n  const diagnosisDate = programEnrolment.getObservationReadableValue('Date of diagnosis');\n  let visitDate = programEnrolment.enrolmentDateTime;\n \n if(imports.moment(diagnosisDate).isAfter(visitDate, 'date'))\n statusBuilder.validationError(\"Diagnosis Date cannot be after visit date\");\n \n  return statusBuilder.build();\n};",
      "mandatory" : true
    }, {
      "name" : "Name of subcategory of disease",
      "uuid" : "d8a1c0bf-90b0-4fa6-9286-2b9a4137facd",
      "keyValues" : [ ],
      "concept" : {
        "name" : "Name of subcategory of disease",
        "uuid" : "677b90f4-aba1-47d0-8f8a-4d0ead1288b0",
        "dataType" : "Text",
        "answers" : [ ],
        "active" : true
      },
      "displayOrder" : 2.0,
      "type" : "SingleSelect",
      "mandatory" : true
    } ],
    "timed" : false
  } ],
  "decisionRule" : "",
  "visitScheduleRule" : "",
  "validationRule" : "",
  "checklistsRule" : "",
  "decisionConcepts" : [ ]
}